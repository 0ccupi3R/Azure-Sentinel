Parser:
  Title: ASIM GCP DNS Query Parser
  Version: '0.1.0'
  LastUpdated: June 22, 2021
Vendor:
  Name: GCP
Product:
  Name: DNS
Normalization:
  Schema: DNS
  Version: '0.2.0'
References:
- Title: ASIM DNS Schema
  Link: https://aka.ms/AzSentinelDNSDoc
- Title: ASIM
  Link: https:/aka.ms/AzSentinelNormalization
Description: |
      This Query Parser maps GCP DNS logs (GCP_DNS_CL) to the Azure Sentinel Information Model DNS query schema.
ParserName: vimDnsGcpDns
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: srcipaddr
    Type: string
    Default: '*'
  - Name: domain
    Type: string
    Default: '*'
  - Name: responsecodename
    Type: string
    Default: '*'
  - Name: response
    Type: string
    Default: '*'
  - Name: eventtype
    Type: string
    Default: 'lookup'
ParserQuery: |
  let DNSQuery_GcpDns=(
    starttime:datetime=datetime(null), endtime:datetime=datetime(null)
    , srcipaddr:string='*',domain:string='*'
    , responsecodename:string='*', response:string='*', eventtype:string='lookup'
    ){
      GCP_DNS_CL
  // ******************************************************************
  //  Pre-parsing filterring:
    | where
      (isnull(starttime) or TimeGenerated > starttime)
      and (isnull(endtime) or TimeGenerated < endtime) 
      and (srcipaddr=='*' or payload_sourceIP_s==srcipaddr)
      and (domain=='*' or payload_queryName_s=~domain)
      and (responsecodename=='*' or payload_responseCode_s=~responsecodename)
  // *****************************************************************
      | where resource_type_s == "dns_query"
      | project-rename
          Query=payload_queryName_s, 
          QueryTypeName=payload_queryType_s,
          ResponseName=payload_rdata_s, 
          EventResultDetails=payload_responseCode_s,
          NetworkProtocol=payload_protocol_s, 
          SrcIpAddr=payload_sourceIP_s,
          EventOriginalUid=insert_id_s,
          EventSeverity=severity_s
      
      | extend
          EventCount=int(1),
          EventProduct='Cloud DNS',
          EventVendor='GCP',
          EventSchemaVersion="0.1.0",
          Dvc="GCPDNS" ,
          EventType = iif (resource_type_s == "dns_query", "lookup", resource_type_s)
          EventResult=iff(payload_responseCode_s=~'NOERROR','Success','Failure'),
          EventSubType='response',
          EventEndTime=todatetime(Timestamp_t)
        
      // -- Aliases
      | extend 
          ResponseCodeName=EventResultDetails, 
          Domain=Query,
          IpAddr=SrcIpAddr
          EventStartTime = EventEndTime
    
          };
  DNSQuery_GcpDns(starttime, endtime, srcipaddr,domain, responsecodename, response, eventtype)